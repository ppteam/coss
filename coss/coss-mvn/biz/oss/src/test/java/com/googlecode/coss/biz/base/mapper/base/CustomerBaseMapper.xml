<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.googlecode.coss.biz.base.model.Customer">
	<!-- open cache -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	<resultMap id="com.googlecode.coss.biz.base.Customer.RM" type="com.googlecode.coss.biz.base.model.Customer">
        <result property="cusId" column="cus_id"/>
        <result property="cusNo" column="cus_no"/>
        <result property="cusEngName" column="cus_eng_name"/>
        <result property="cusChnName" column="cus_chn_name"/>
        <result property="area" column="area"/>
        <result property="address" column="address"/>
        <result property="zipcode" column="zipcode"/>
        <result property="contactTel" column="contact_tel"/>
        <result property="backupTel1" column="backup_tel1"/>
        <result property="backupTel2" column="backup_tel2"/>
        <result property="fax" column="fax"/>
        <result property="cusEngIntro" column="cus_eng_intro"/>
        <result property="cusChnIntro" column="cus_chn_intro"/>
        <result property="website" column="website"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		cus_id,cus_no,cus_eng_name,cus_chn_name,area,address,zipcode,contact_tel,backup_tel1,backup_tel2,fax,cus_eng_intro,cus_chn_intro,website,remark,status,create_by,create_time,update_by,update_time
	    ]]>
	</sql>
	
	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,具体请查看Ognl类 -->
		<where>	      				
			<if test="@.Ognl@isNotEmpty(cusId)">
				<if test="@.Ognl@isNotEmpty(conditions.cusId)">${conditions.cusId.condition}</if> cus_id <if test="@.Ognl@isNotEmpty(conditions.cusId)">${conditions.cusId.compare.value}</if> #{cusId}
			</if>
			<if test="@.Ognl@isNotEmpty(cusNo)">
				<if test="@.Ognl@isNotEmpty(conditions.cusNo)">${conditions.cusNo.condition}</if> cus_no <if test="@.Ognl@isNotEmpty(conditions.cusNo)">${conditions.cusNo.compare.value}</if> #{cusNo}
			</if>
			<if test="@.Ognl@isNotEmpty(cusEngName)">
				<if test="@.Ognl@isNotEmpty(conditions.cusEngName)">${conditions.cusEngName.condition}</if> cus_eng_name <if test="@.Ognl@isNotEmpty(conditions.cusEngName)">${conditions.cusEngName.compare.value}</if> #{cusEngName}
			</if>
			<if test="@.Ognl@isNotEmpty(cusChnName)">
				<if test="@.Ognl@isNotEmpty(conditions.cusChnName)">${conditions.cusChnName.condition}</if> cus_chn_name <if test="@.Ognl@isNotEmpty(conditions.cusChnName)">${conditions.cusChnName.compare.value}</if> #{cusChnName}
			</if>
			<if test="@.Ognl@isNotEmpty(area)">
				<if test="@.Ognl@isNotEmpty(conditions.area)">${conditions.area.condition}</if> area <if test="@.Ognl@isNotEmpty(conditions.area)">${conditions.area.compare.value}</if> #{area}
			</if>
			<if test="@.Ognl@isNotEmpty(address)">
				<if test="@.Ognl@isNotEmpty(conditions.address)">${conditions.address.condition}</if> address <if test="@.Ognl@isNotEmpty(conditions.address)">${conditions.address.compare.value}</if> #{address}
			</if>
			<if test="@.Ognl@isNotEmpty(zipcode)">
				<if test="@.Ognl@isNotEmpty(conditions.zipcode)">${conditions.zipcode.condition}</if> zipcode <if test="@.Ognl@isNotEmpty(conditions.zipcode)">${conditions.zipcode.compare.value}</if> #{zipcode}
			</if>
			<if test="@.Ognl@isNotEmpty(contactTel)">
				<if test="@.Ognl@isNotEmpty(conditions.contactTel)">${conditions.contactTel.condition}</if> contact_tel <if test="@.Ognl@isNotEmpty(conditions.contactTel)">${conditions.contactTel.compare.value}</if> #{contactTel}
			</if>
			<if test="@.Ognl@isNotEmpty(backupTel1)">
				<if test="@.Ognl@isNotEmpty(conditions.backupTel1)">${conditions.backupTel1.condition}</if> backup_tel1 <if test="@.Ognl@isNotEmpty(conditions.backupTel1)">${conditions.backupTel1.compare.value}</if> #{backupTel1}
			</if>
			<if test="@.Ognl@isNotEmpty(backupTel2)">
				<if test="@.Ognl@isNotEmpty(conditions.backupTel2)">${conditions.backupTel2.condition}</if> backup_tel2 <if test="@.Ognl@isNotEmpty(conditions.backupTel2)">${conditions.backupTel2.compare.value}</if> #{backupTel2}
			</if>
			<if test="@.Ognl@isNotEmpty(fax)">
				<if test="@.Ognl@isNotEmpty(conditions.fax)">${conditions.fax.condition}</if> fax <if test="@.Ognl@isNotEmpty(conditions.fax)">${conditions.fax.compare.value}</if> #{fax}
			</if>
			<if test="@.Ognl@isNotEmpty(cusEngIntro)">
				<if test="@.Ognl@isNotEmpty(conditions.cusEngIntro)">${conditions.cusEngIntro.condition}</if> cus_eng_intro <if test="@.Ognl@isNotEmpty(conditions.cusEngIntro)">${conditions.cusEngIntro.compare.value}</if> #{cusEngIntro}
			</if>
			<if test="@.Ognl@isNotEmpty(cusChnIntro)">
				<if test="@.Ognl@isNotEmpty(conditions.cusChnIntro)">${conditions.cusChnIntro.condition}</if> cus_chn_intro <if test="@.Ognl@isNotEmpty(conditions.cusChnIntro)">${conditions.cusChnIntro.compare.value}</if> #{cusChnIntro}
			</if>
			<if test="@.Ognl@isNotEmpty(website)">
				<if test="@.Ognl@isNotEmpty(conditions.website)">${conditions.website.condition}</if> website <if test="@.Ognl@isNotEmpty(conditions.website)">${conditions.website.compare.value}</if> #{website}
			</if>
			<if test="@.Ognl@isNotEmpty(remark)">
				<if test="@.Ognl@isNotEmpty(conditions.remark)">${conditions.remark.condition}</if> remark <if test="@.Ognl@isNotEmpty(conditions.remark)">${conditions.remark.compare.value}</if> #{remark}
			</if>
			<if test="@.Ognl@isNotEmpty(status)">
				<if test="@.Ognl@isNotEmpty(conditions.status)">${conditions.status.condition}</if> status <if test="@.Ognl@isNotEmpty(conditions.status)">${conditions.status.compare.value}</if> #{status}
			</if>
			<if test="@.Ognl@isNotEmpty(createBy)">
				<if test="@.Ognl@isNotEmpty(conditions.createBy)">${conditions.createBy.condition}</if> create_by <if test="@.Ognl@isNotEmpty(conditions.createBy)">${conditions.createBy.compare.value}</if> #{createBy}
			</if>
			<if test="@.Ognl@isNotEmpty(createTimeBegin)">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="@.Ognl@isNotEmpty(createTimeEnd)">
				AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="@.Ognl@isNotEmpty(updateBy)">
				<if test="@.Ognl@isNotEmpty(conditions.updateBy)">${conditions.updateBy.condition}</if> update_by <if test="@.Ognl@isNotEmpty(conditions.updateBy)">${conditions.updateBy.compare.value}</if> #{updateBy}
			</if>
			<if test="@.Ognl@isNotEmpty(updateTimeBegin)">
				AND update_time >= #{updateTimeBegin}
			</if>
			<if test="@.Ognl@isNotEmpty(updateTimeEnd)">
				AND update_time &lt;= #{updateTimeEnd}
			</if>
		</where>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="cusId">
    <![CDATA[
        INSERT INTO cus$customer (
        	cus_id ,
        	cus_no ,
        	cus_eng_name ,
        	cus_chn_name ,
        	area ,
        	address ,
        	zipcode ,
        	contact_tel ,
        	backup_tel1 ,
        	backup_tel2 ,
        	fax ,
        	cus_eng_intro ,
        	cus_chn_intro ,
        	website ,
        	remark ,
        	status ,
        	create_by ,
        	create_time ,
        	update_by ,
        	update_time 
        ) VALUES (
        	#{cusId} ,
        	#{cusNo} ,
        	#{cusEngName} ,
        	#{cusChnName} ,
        	#{area} ,
        	#{address} ,
        	#{zipcode} ,
        	#{contactTel} ,
        	#{backupTel1} ,
        	#{backupTel2} ,
        	#{fax} ,
        	#{cusEngIntro} ,
        	#{cusChnIntro} ,
        	#{website} ,
        	#{remark} ,
        	#{status} ,
        	#{createBy} ,
        	#{createTime} ,
        	#{updateBy} ,
        	#{updateTime} 
        )
    ]]>
	    	<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="cusId">
				SELECT LAST_INSERT_ID()
	        </selectKey>
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE cus$customer SET
	        cus_no = #{cusNo} ,
	        cus_eng_name = #{cusEngName} ,
	        cus_chn_name = #{cusChnName} ,
	        area = #{area} ,
	        address = #{address} ,
	        zipcode = #{zipcode} ,
	        contact_tel = #{contactTel} ,
	        backup_tel1 = #{backupTel1} ,
	        backup_tel2 = #{backupTel2} ,
	        fax = #{fax} ,
	        cus_eng_intro = #{cusEngIntro} ,
	        cus_chn_intro = #{cusChnIntro} ,
	        website = #{website} ,
	        remark = #{remark} ,
	        status = #{status} ,
	        create_by = #{createBy} ,
	        create_time = #{createTime} ,
	        update_by = #{updateBy} ,
	        update_time = #{updateTime} 
        WHERE 
	        cus_id = #{cusId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cus$customer WHERE
        cus_id = #{id} 
    ]]>
    </delete>
    
	<delete id="deleteIds">
	<![CDATA[
		DELETE FROM cus$customer WHERE
        cus_id
		 in 
	]]>
		<foreach collection="array" item="ids" open="(" separator="," close=")">#{ids}</foreach>
	</delete>
    
    <select id="getById" resultMap="com.googlecode.coss.biz.base.Customer.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM cus$customer 
	        WHERE 
		        cus_id = #{id} 
	    ]]>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM cus$customer 
		<include refid="where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="com.googlecode.coss.biz.base.Customer.RM">
    	SELECT <include refid="columns" />
	    FROM cus$customer
		<include refid="where"/>
		<if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="findAll" resultMap="com.googlecode.coss.biz.base.Customer.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM cus$customer 
	    ]]>
	    <if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<select id="find" resultMap="com.googlecode.coss.biz.base.Customer.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM cus$customer 
	    ]]>
	    <include refid="where"/>
	    <if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	

</mapper>