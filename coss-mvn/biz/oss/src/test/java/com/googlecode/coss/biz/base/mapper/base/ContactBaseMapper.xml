<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.googlecode.coss.biz.base.model.Contact">
	<!-- open cache -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	<resultMap id="com.googlecode.coss.biz.base.Contact.RM" type="com.googlecode.coss.biz.base.model.Contact">
        <result property="contactId" column="contact_id"/>
        <result property="contactName" column="contact_name"/>
        <result property="gender" column="gender"/>
        <result property="position" column="position"/>
        <result property="mobile" column="mobile"/>
        <result property="workPhone" column="work_phone"/>
        <result property="email" column="email"/>
        <result property="homePhone" column="home_phone"/>
        <result property="qq" column="qq"/>
        <result property="msn" column="msn"/>
        <result property="other" column="other"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		contact_id,contact_name,gender,position,mobile,work_phone,email,home_phone,qq,msn,other,status,create_by,create_time,update_by,update_time
	    ]]>
	</sql>
	
	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,具体请查看Ognl类 -->
		<where>	      				
			<if test="@.Ognl@isNotEmpty(contactId)">
				<if test="@.Ognl@isNotEmpty(conditions.contactId)">${conditions.contactId.condition}</if> contact_id <if test="@.Ognl@isNotEmpty(conditions.contactId)">${conditions.contactId.compare.value}</if> #{contactId}
			</if>
			<if test="@.Ognl@isNotEmpty(contactName)">
				<if test="@.Ognl@isNotEmpty(conditions.contactName)">${conditions.contactName.condition}</if> contact_name <if test="@.Ognl@isNotEmpty(conditions.contactName)">${conditions.contactName.compare.value}</if> #{contactName}
			</if>
			<if test="@.Ognl@isNotEmpty(gender)">
				<if test="@.Ognl@isNotEmpty(conditions.gender)">${conditions.gender.condition}</if> gender <if test="@.Ognl@isNotEmpty(conditions.gender)">${conditions.gender.compare.value}</if> #{gender}
			</if>
			<if test="@.Ognl@isNotEmpty(position)">
				<if test="@.Ognl@isNotEmpty(conditions.position)">${conditions.position.condition}</if> position <if test="@.Ognl@isNotEmpty(conditions.position)">${conditions.position.compare.value}</if> #{position}
			</if>
			<if test="@.Ognl@isNotEmpty(mobile)">
				<if test="@.Ognl@isNotEmpty(conditions.mobile)">${conditions.mobile.condition}</if> mobile <if test="@.Ognl@isNotEmpty(conditions.mobile)">${conditions.mobile.compare.value}</if> #{mobile}
			</if>
			<if test="@.Ognl@isNotEmpty(workPhone)">
				<if test="@.Ognl@isNotEmpty(conditions.workPhone)">${conditions.workPhone.condition}</if> work_phone <if test="@.Ognl@isNotEmpty(conditions.workPhone)">${conditions.workPhone.compare.value}</if> #{workPhone}
			</if>
			<if test="@.Ognl@isNotEmpty(email)">
				<if test="@.Ognl@isNotEmpty(conditions.email)">${conditions.email.condition}</if> email <if test="@.Ognl@isNotEmpty(conditions.email)">${conditions.email.compare.value}</if> #{email}
			</if>
			<if test="@.Ognl@isNotEmpty(homePhone)">
				<if test="@.Ognl@isNotEmpty(conditions.homePhone)">${conditions.homePhone.condition}</if> home_phone <if test="@.Ognl@isNotEmpty(conditions.homePhone)">${conditions.homePhone.compare.value}</if> #{homePhone}
			</if>
			<if test="@.Ognl@isNotEmpty(qq)">
				<if test="@.Ognl@isNotEmpty(conditions.qq)">${conditions.qq.condition}</if> qq <if test="@.Ognl@isNotEmpty(conditions.qq)">${conditions.qq.compare.value}</if> #{qq}
			</if>
			<if test="@.Ognl@isNotEmpty(msn)">
				<if test="@.Ognl@isNotEmpty(conditions.msn)">${conditions.msn.condition}</if> msn <if test="@.Ognl@isNotEmpty(conditions.msn)">${conditions.msn.compare.value}</if> #{msn}
			</if>
			<if test="@.Ognl@isNotEmpty(other)">
				<if test="@.Ognl@isNotEmpty(conditions.other)">${conditions.other.condition}</if> other <if test="@.Ognl@isNotEmpty(conditions.other)">${conditions.other.compare.value}</if> #{other}
			</if>
			<if test="@.Ognl@isNotEmpty(status)">
				<if test="@.Ognl@isNotEmpty(conditions.status)">${conditions.status.condition}</if> status <if test="@.Ognl@isNotEmpty(conditions.status)">${conditions.status.compare.value}</if> #{status}
			</if>
			<if test="@.Ognl@isNotEmpty(createBy)">
				<if test="@.Ognl@isNotEmpty(conditions.createBy)">${conditions.createBy.condition}</if> create_by <if test="@.Ognl@isNotEmpty(conditions.createBy)">${conditions.createBy.compare.value}</if> #{createBy}
			</if>
			<if test="@.Ognl@isNotEmpty(createTimeBegin)">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="@.Ognl@isNotEmpty(createTimeEnd)">
				AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="@.Ognl@isNotEmpty(updateBy)">
				<if test="@.Ognl@isNotEmpty(conditions.updateBy)">${conditions.updateBy.condition}</if> update_by <if test="@.Ognl@isNotEmpty(conditions.updateBy)">${conditions.updateBy.compare.value}</if> #{updateBy}
			</if>
			<if test="@.Ognl@isNotEmpty(updateTimeBegin)">
				AND update_time >= #{updateTimeBegin}
			</if>
			<if test="@.Ognl@isNotEmpty(updateTimeEnd)">
				AND update_time &lt;= #{updateTimeEnd}
			</if>
		</where>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="contactId">
    <![CDATA[
        INSERT INTO mfg$contact (
        	contact_id ,
        	contact_name ,
        	gender ,
        	position ,
        	mobile ,
        	work_phone ,
        	email ,
        	home_phone ,
        	qq ,
        	msn ,
        	other ,
        	status ,
        	create_by ,
        	create_time ,
        	update_by ,
        	update_time 
        ) VALUES (
        	#{contactId} ,
        	#{contactName} ,
        	#{gender} ,
        	#{position} ,
        	#{mobile} ,
        	#{workPhone} ,
        	#{email} ,
        	#{homePhone} ,
        	#{qq} ,
        	#{msn} ,
        	#{other} ,
        	#{status} ,
        	#{createBy} ,
        	#{createTime} ,
        	#{updateBy} ,
        	#{updateTime} 
        )
    ]]>
	    	<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="contactId">
				SELECT LAST_INSERT_ID()
	        </selectKey>
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE mfg$contact SET
	        contact_name = #{contactName} ,
	        gender = #{gender} ,
	        position = #{position} ,
	        mobile = #{mobile} ,
	        work_phone = #{workPhone} ,
	        email = #{email} ,
	        home_phone = #{homePhone} ,
	        qq = #{qq} ,
	        msn = #{msn} ,
	        other = #{other} ,
	        status = #{status} ,
	        create_by = #{createBy} ,
	        create_time = #{createTime} ,
	        update_by = #{updateBy} ,
	        update_time = #{updateTime} 
        WHERE 
	        contact_id = #{contactId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM mfg$contact WHERE
        contact_id = #{id} 
    ]]>
    </delete>
    
	<delete id="deleteIds">
	<![CDATA[
		DELETE FROM mfg$contact WHERE
        contact_id
		 in 
	]]>
		<foreach collection="array" item="ids" open="(" separator="," close=")">#{ids}</foreach>
	</delete>
    
    <select id="getById" resultMap="com.googlecode.coss.biz.base.Contact.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM mfg$contact 
	        WHERE 
		        contact_id = #{id} 
	    ]]>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM mfg$contact 
		<include refid="where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="com.googlecode.coss.biz.base.Contact.RM">
    	SELECT <include refid="columns" />
	    FROM mfg$contact
		<include refid="where"/>
		<if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="findAll" resultMap="com.googlecode.coss.biz.base.Contact.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM mfg$contact 
	    ]]>
	    <if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<select id="find" resultMap="com.googlecode.coss.biz.base.Contact.RM">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM mfg$contact 
	    ]]>
	    <include refid="where"/>
	    <if test="@.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	

</mapper>