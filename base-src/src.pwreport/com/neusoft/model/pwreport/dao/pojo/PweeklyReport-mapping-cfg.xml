<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="PweeklyReport">
	<typeAlias alias="PweeklyReport" type="com.neusoft.model.pwreport.dao.pojo.PweeklyReport" />
	<typeAlias alias="PweeklyMemberplan" type="com.neusoft.model.pwreport.dao.pojo.PweeklyMemberplan"/>
	<typeAlias alias="PweeklyProblems" type="com.neusoft.model.pwreport.dao.pojo.PweeklyProblems" />
	<insert id="insert-Report" parameterClass="PweeklyReport">
		INSERT INTO PWEEKLY_REPORT
			(
				REPORT_ID,PROJECT_ID,USER_ID,START_DATE,END_DATE,RECORD_DATE,
				REPORT_NO,EFFICIENCY_EXECUTE,HUMAN_RESOURCE,REQUIREMENT_ALTER,CLIENT_RELATION,
				PROJECT_DESC,LEADER_APPRAISE,RESULTS_SHOW,
				CWEEK_PLAN,COMPLETE_PLAN,NWEEK_PLAN,PSMER_ID,REPORT_TYPE
			)
		VALUES
			(
				#reportId:VARCHAR#,#projectId#,#userId:VARCHAR#,
				#startDate#,DATE_ADD(#startDate#,INTERVAL 6 DAY),CURRENT_DATE(),
				#reportNo:VARCHAR#,#efficiencyExecute:VARCHAR#,
				#humanResource:VARCHAR#,#requirementAlter:VARCHAR#,
				#clientRelation:VARCHAR#,
				#projectDesc:VARCHAR#,#leaderAppraise:VARCHAR#,
				#resultsShow:VARCHAR#,#cweekPlan:VARCHAR#,
				#completePlan:VARCHAR#,#nweekPlan:VARCHAR#,
				#psmerId:VARCHAR#,#reportType#
			)
	</insert>
	<insert id="insert-Memberplan" parameterClass="PweeklyMemberplan">
		INSERT INTO PWEEKLY_MEMBERPLAN
			(DATA_ID,REPORT_ID,BRANCH_ID,USER_ID,WEEKLY_SUMMARY,WEEKLY_PLAN)
		VALUES
			(#dataId:VARCHAR#,#reportId:VARCHAR#,#branchId:VARCHAR#,#userId:VARCHAR#,
			#weeklySummary:VARCHAR#,#weeklyPlan:VARCHAR#)
	</insert>
	<insert id="insert-Problems" parameterClass="PweeklyProblems">
		INSERT INTO PWEEKLY_PROBLEMS
			(PROBLEM_ID,REPORT_ID,PROJECT_ID,DISCOVER_DATE,USER_NAME,
			PROBLEM_DESC,RESOLVE_WAY,PROBLEM_STATS,RESPOSIBLER,SOLVE_DATE)
		VALUES
			(#problemId:VARCHAR#,#reportId:VARCHAR#,#projectId#,#discoverDate:DATE#,
			#userName:VARCHAR#,#problemDesc:VARCHAR#,
			#resolveWay:VARCHAR#,#problemStats:VARCHAR#,#resposibler:VARCHAR#,#solveDate:DATE#)
	</insert>
	<update id="update_report" parameterClass="PweeklyReport">
		UPDATE 
			PWEEKLY_REPORT 
		SET
			EFFICIENCY_EXECUTE = #efficiencyExecute:VARCHAR#,
			HUMAN_RESOURCE = #humanResource:VARCHAR#,
			REQUIREMENT_ALTER = #requirementAlter:VARCHAR#,
			CLIENT_RELATION = #clientRelation:VARCHAR#,
			PROJECT_DESC = #projectDesc:VARCHAR#,
			LEADER_APPRAISE = #leaderAppraise:VARCHAR#,
			RESULTS_SHOW = #resultsShow:VARCHAR#,
			CWEEK_PLAN = #cweekPlan:VARCHAR#,
			COMPLETE_PLAN = #completePlan:VARCHAR#,
			NWEEK_PLAN = #nweekPlan:VARCHAR#,
			RECORD_DATE = CURRENT_DATE()
		WHERE
			REPORT_ID = #reportId#
	</update>
	<select id="query_report_by_count" parameterClass="PweeklyReport"  resultClass="int">
		SELECT
			COUNT(t.REPORT_ID) as count
		FROM
			PWEEKLY_REPORT t 
		WHERE
			(t.PROJECT_ID = #projectId# AND 
			(	
				(#startDate# BETWEEN t.START_DATE AND t.END_DATE) OR 
				(#endDate# BETWEEN t.START_DATE AND t.END_DATE)
			)) OR 
			(REPORT_NO = #reportNo#)
	</select>
	<select id="query_last_prolems_by_reportId" parameterClass="string" resultClass="PweeklyProblems">
		SELECT
			t.DISCOVER_DATE as discoverDate,
			t.PROBLEM_DESC as problemDesc,
			t.USER_NAME as userName,
			t.RESOLVE_WAY as resolveWay,
			t.RESPOSIBLER as resposibler,
			t.PROBLEM_STATS as problemStats,
			t.SOLVE_DATE as solveDate
		FROM
			PWEEKLY_PROBLEMS t
		WHERE
			t.REPORT_ID = (
				SELECT 
					p.REPORT_ID 
				FROM 
					PWEEKLY_REPORT p 
				WHERE 
					p.PROJECT_ID = #value# AND p.END_DATE = (
						SELECT MAX(m.END_DATE) FROM PWEEKLY_REPORT m WHERE m.PROJECT_ID = #value#
					)
			) AND
			t.PROBLEM_STATS = '2348997cc7c1438ba317bf2d7da1288b'
	</select>
	<select id="query_prolist_for_pwr" parameterClass="map" resultClass="ComboxModel">
		SELECT
				t.PROJECT_ID as regValue,
				t.PROJECT_NAME as displayValue,
				'project_list' as storName,
				t.WEEK_BEGIN as leafNode
		FROM
			PROJECT_INFO t
		WHERE
			t.NEED_REPORT = 1 AND 
			t.PROJECT_STATS = 'b9cca6cb3163425987529be72b7a1dca' AND
			t.PROJECT_ID IN (
				SELECT 
					m.PROJECT_ID 
				FROM 
					PRO_TRANSFER_LOGS m 
				WHERE 
					m.ROLE_TYPE = 'c401a1050fe64b29ba60997e2a576d52' AND 
					m.CURRT_STATS = 1 AND
					m.USER_ID = #KEY_USERID#
			)
	</select>
	<select id="query_last_report_byprojectId" parameterClass="PweeklyReport" resultClass="PweeklyReport">
		<![CDATA[
			SELECT
				p.REPORT_ID as reportId,p.NWEEK_PLAN as nweekPlan
			FROM
				PWEEKLY_REPORT p
			WHERE
				p.PROJECT_ID = #projectId# AND
				p.START_DATE < #startDate#
			ORDER BY p.START_DATE DESC
			LIMIT 1
		]]>
	</select>
	<select id="query_open_problems" parameterClass="PweeklyReport" resultClass="PweeklyProblems">
		SELECT
			p.PROBLEM_ID as problemId,p.REPORT_ID as reportId,
			p.DISCOVER_DATE as discoverDate,p.USER_NAME as userName,
			p.PROBLEM_DESC as problemDesc,p.RESOLVE_WAY as resolveWay,
			p.PROBLEM_STATS as problemStats,p.RESPOSIBLER as resposibler,
			p.SOLVE_DATE as solveDate
		FROM
			PWEEKLY_PROBLEMS p
		WHERE
			p.PROBLEM_STATS = '2348997cc7c1438ba317bf2d7da1288b' AND
			p.PROJECT_ID = #projectId#
	</select>
	<select id="query_problems_by_reportId" parameterClass="PweeklyReport" resultClass="PweeklyProblems">
		SELECT
			p.PROBLEM_ID as problemId,p.REPORT_ID as reportId,
			p.DISCOVER_DATE as discoverDate,p.USER_NAME as userName,
			p.PROBLEM_DESC as problemDesc,p.RESOLVE_WAY as resolveWay,
			p.PROBLEM_STATS as problemStats,p.RESPOSIBLER as resposibler,
			p.SOLVE_DATE as solveDate
		FROM
			PWEEKLY_PROBLEMS p
		WHERE
			p.REPORT_ID = #reportId#
	</select>
	<select id="query_plans_one" parameterClass="PweeklyReport" resultClass="PweeklyMemberplan">
		SELECT
		  	e.USER_ID as userId,
			SUM(IF(e.work_type='0d0cc048adf440edb55d8e53d756439c',e.work_hours,0)) as normalTime,
			SUM(IF(e.work_type='dba8abe0a65945a49ebfc587c947d920',e.work_hours,0)) as overTime
		FROM 
			edaily_report e 
		WHERE 
			e.PROJECT_ID =#projectId# AND
			e.REPORT_DATE BETWEEN #startDate# and #endDate#
		GROUP BY 
			e.USER_ID
	</select>
	
	<select id="query_plans_two" parameterClass="PweeklyReport" resultClass="PweeklyMemberplan">
		SELECT
		  	pm.USER_ID as userId,u.USER_NAME as userName,pm.WEEKLY_SUMMARY as weeklySummary,
		  	(SELECT dc.ENTRY_NAME FROM DICT_CATALOG dc WHERE dc.CATALOG_ID = u.POST_TYPE) as branchName,
		  	pm.WEEKLY_PLAN as weeklyPlan
		FROM 
			PWEEKLY_MEMBERPLAN pm
			LEFT JOIN user_basic u ON u.USER_ID = pm.USER_ID
		WHERE 
			pm.REPORT_ID = #reportId#
	</select>
	
	<select id="query_aller_by_projectId" parameterClass="PweeklyReport" resultClass="PweeklyMemberplan">
		SELECT
			p.USER_ID as userId,u.USER_NAME as userName,u.POST_TYPE as branchId,
		  	(SELECT dc.ENTRY_NAME FROM DICT_CATALOG dc WHERE dc.CATALOG_ID = u.POST_TYPE) as branchName
		FROM
			PRO_TRANSFER_LOGS p
			LEFT JOIN user_basic u on u.USER_ID = p.USER_ID
		WHERE
			p.PROJECT_ID = #projectId# AND 
			p.ROLE_TYPE IN ('517a4e05b5d44b5096e9b3bd04bec654',
							'c401a1050fe64b29ba60997e2a576d52',
							'9e635bb0864f4833aa06f0f1336cad34',
							'70eed5ac1d7048d68f3648df7640b6a1') AND 
			p.CURRT_STATS =1
	</select>
	<select id="query_other_by_projectId" parameterClass="PweeklyReport" resultClass="PweeklyMemberplan">
		SELECT
		  	e.USER_ID as userId,u.USER_NAME as userName,u.POST_TYPE as branchId,
		  	(SELECT dc.ENTRY_NAME FROM DICT_CATALOG dc WHERE dc.CATALOG_ID = u.POST_TYPE) as branchName
		FROM 
			edaily_report e LEFT JOIN dict_catalog d on d.CATALOG_ID = e.WORK_TYPE
							LEFT JOIN user_basic u on e.USER_ID = u.USER_ID
		WHERE 
			e.PROJECT_ID =#projectId# AND 
			(e.REPORT_DATE BETWEEN #startDate# AND DATE_ADD(#startDate#,INTERVAL 6 DAY)) AND
			e.USER_ID NOT IN 
			(
				SELECT
					DISTINCT(p.USER_ID) 
				FROM
					PRO_TRANSFER_LOGS p
					LEFT JOIN user_basic u on u.USER_ID = p.USER_ID
				WHERE
					p.PROJECT_ID = #projectId# AND 
					p.ROLE_TYPE IN ('517a4e05b5d44b5096e9b3bd04bec654',
									'c401a1050fe64b29ba60997e2a576d52',
									'9e635bb0864f4833aa06f0f1336cad34',
									'70eed5ac1d7048d68f3648df7640b6a1') AND 
					p.CURRT_STATS =1
			)
		GROUP BY 
			e.USER_ID
	</select>
	
	<select id="load_by_reportId" parameterClass="string" resultClass="PweeklyReport">
		SELECT
		  p.REPORT_ID as reportId,
		  r.PROJECT_NAME as projectName,
		  u.USER_NAME as psmName,
		  r.PROJECT_ID as projectId,
		  p.START_DATE as startDate,
		  p.END_DATE as endDate,
		  p.PROJECT_DESC as projectDesc,
		  p.LEADER_APPRAISE as leaderAppraise,
		  p.EFFICIENCY_EXECUTE as efficiencyExecute,
		  p.HUMAN_RESOURCE as humanResource,
		  p.REQUIREMENT_ALTER as requirementAlter,
		  p.CLIENT_RELATION as clientRelation,
		  p.RESULTS_SHOW as resultsShow,
		  p.CWEEK_PLAN as cweekPlan,
		  p.COMPLETE_PLAN as completePlan,
		  p.NWEEK_PLAN as nweekPlan
		FROM 
			PWEEKLY_REPORT p 
			LEFT JOIN USER_BASIC u ON p.PSMER_ID = u.USER_ID
			LEFT JOIN PROJECT_INFO r ON p.PROJECT_ID = r.PROJECT_ID
		WHERE 
			p.REPORT_ID =#value#
	</select>
	<select id="load_rptList_by_userId" parameterClass="string" resultClass="ComboxModel">
		SELECT 
			r.REPORT_ID as regValue,
			r.REPORT_NO as displayValue,
			'pwreport_list' as storName
		FROM
			pweekly_report r LEFT JOIN project_info p ON r.PROJECT_ID=p.PROJECT_ID
		WHERE
			p.NEED_REPORT = 1 AND
			p.PROJECT_STATS = 'b9cca6cb3163425987529be72b7a1dca' AND
			r.PROJECT_ID IN
			(
				SELECT 
					g.PROJECT_ID
				FROM
					pro_transfer_logs g
				WHERE
					g.ROLE_TYPE = 'c401a1050fe64b29ba60997e2a576d52' AND
					g.CURRT_STATS = 1 AND
					g.USER_ID = #value#
			)
		ORDER BY
			r.END_DATE DESC
		LIMIT 0,10
	</select>
	<select id="query_report_by_project_count" parameterClass="map" resultClass="int">
		SELECT 
			count(p.REPORT_ID)
		FROM
			pweekly_report p
		WHERE
		<dynamic>
			<iterate open=" p.PROJECT_ID IN (" close=") " conjunction="," property="projectIds">
				#projectIds[]#
			</iterate>
			<isNotEmpty prepend=" AND " property="week">
				#week# BETWEEN p.START_DATE AND p.END_DATE
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="query_report_by_project" parameterClass="map" resultClass="java.util.HashMap">
		SELECT 
			pr.REPORT_ID as reportId,p.PROJECT_ID as projectId,pr.REPORT_NO as reportNo,
			p.PROJECT_NAME as projectName,pr.START_DATE as startDate,pr.END_DATE as endDate,
		  	(SELECT u.USER_NAME FROM user_basic u WHERE u.USER_ID = pr.PSMER_ID) as psmerName,
			(SELECT COUNT(lg.USER_ID) FROM pro_transfer_logs lg 
			 WHERE lg.CURRT_STATS =1 AND lg.PROJECT_ID = p.PROJECT_ID) as members,
			p.PROJECT_STATS as proStats,pr.PROJECT_DESC as projectDesc,
			pr.LEADER_APPRAISE as leaderApp,pr.REPORT_TYPE as reportType, 
			(SELECT COUNT(pm.REPORT_ID) FROM PWEEKLY_PROBLEMS pm WHERE pm.REPORT_ID = pr.REPORT_ID) as plmCnt
		FROM
			pweekly_report pr 
			LEFT JOIN project_info p ON p.PROJECT_ID = pr.PROJECT_ID
		WHERE
		<dynamic>
			<iterate open=" pr.PROJECT_ID IN (" close=") " conjunction="," property="projectIds">
				#projectIds[]#
			</iterate>
			<isNotEmpty prepend=" AND " property="week">
				#week# BETWEEN pr.START_DATE AND pr.END_DATE
			</isNotEmpty>
		</dynamic>
		ORDER BY 
			pr.END_DATE DESC
		LIMIT 
			#start#,#limit#
	</select>
	<delete id="delete_prolems_by_rep" parameterClass="string">
		DELETE FROM PWEEKLY_PROBLEMS WHERE REPORT_ID = #value#
	</delete>
	<delete id="delete_plans_by_rep" parameterClass="string">
		DELETE FROM PWEEKLY_MEMBERPLAN WHERE REPORT_ID = #value#
	</delete>
</sqlMap>
