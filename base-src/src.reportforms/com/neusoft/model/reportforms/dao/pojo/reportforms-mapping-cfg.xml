<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap      
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ReportForms">
	<typeAlias alias="DutyCollect" type="com.neusoft.model.reportforms.dao.pojo.DutyCollect"/>
	<typeAlias alias="WorkDetail" type="com.neusoft.model.reportforms.dao.pojo.WorkDetail"/>
	<typeAlias alias="ProjectMember" type="com.neusoft.model.reportforms.dao.pojo.ProjectMember"/>
	<select id="query_dutyclt_detail" parameterClass="map" resultClass="DailyReport">
		SELECT
			t.USER_ID AS userID,u.USER_NAME AS userName,p.PROJECT_NAME AS projectName,
			t.BEG_TYPE AS begType,t.REPORT_DATE AS reportDate,t.WORK_HOURS AS workHours,
			weekofyear(t.REPORT_DATE) AS wkOfYear,
			date_add(t.REPORT_DATE, interval 0-weekday(t.REPORT_DATE) day) AS weekStart,
			date_add(t.REPORT_DATE, interval 6-weekday(t.REPORT_DATE) day) AS weekEnd
		FROM
			EDAILY_REPORT t 
			LEFT JOIN USER_BASIC u ON u.USER_ID = t.USER_ID
			LEFT JOIN PROJECT_INFO p ON p.PROJECT_ID = t.PROJECT_ID
		WHERE
			t.WORK_TYPE = '3692b9cd731a452ea9e9c55efa5c9618' AND
			(t.REPORT_DATE BETWEEN #startDate# AND #endDate#)
		<dynamic>
			<iterate open=" AND t.DEPT_ID IN (" close=") " conjunction="," property="deptIds">
				#deptIds[]#
			</iterate>
		</dynamic>
		ORDER BY t.REPORT_DATE
	</select>
	<select id="createPerWeek_total" parameterClass="map" resultClass="EWeekReport">
		SELECT
			 ew.WREPORT_ID as wreportID,
			 ew.USER_ID as userID,
			 ub.USER_NAME as userName,
			 ew.START_DATE as startDate,
			 ew.END_DATE as endDate,
			 ew.DEPT_ID as deptID,
			 dept.DEPT_NAME as deptName,
			 ew.REPORT_NO as reportNo,
			 ew.RECORD_DATE as recordDate,
			 ew.WORK_SUMMARY as workSummary,
			 ew.NWEEK_PLAN as nweekPlan,
			 ew.UNSOLVE_PROBLEM as unsolveProblem
		FROM
			EWEEKLY_REPORT AS ew
			LEFT JOIN  user_basic AS ub ON ew.USER_ID=ub.USER_ID 
			LEFT JOIN  department_info AS dept on ew.DEPT_ID=dept.DEPT_ID
		WHERE 
			ew.WREPORT_ID = #wreportID#
	</select>
	<select id="createPerWeek_list" parameterClass="EWeekReport" resultClass="java.util.HashMap">
		SELECT 
		    ub.USER_NAME as userName,
			er.PROJECT_ID as projectID,
			pif.PROJECT_NAME as projectName,
			pif.PROJECT_NO as projectNo,
			DATE_FORMAT(er.REPORT_DATE,'%Y-%m-%d') as reportDate,
			DATE_FORMAT(er.REPORT_DATE,'%a') as weeks,
			er.WORK_HOURS as workHours,
			coalesce(d1.ENTRY_NAME,er.WORK_TYPE) as workType,
			coalesce(d2.ENTRY_NAME,er.WORK_ACTIVITY) as workActivity,
			er.WORK_CONTENT as  workContent, 
			coalesce(d3.ENTRY_NAME,er.WORK_STATS) as workStats,   
			er.RESULTS_SHOW as resultsShow,  
			er.REP_COMMENT as  repComment   
		FROM  EDAILY_REPORT AS er
			 	LEFT JOIN  project_info   AS pif  ON er.PROJECT_ID=pif.PROJECT_ID
				LEFT JOIN  user_basic     AS ub   ON er.USER_ID=ub.USER_ID 
				LEFT JOIN  dict_catalog   AS d1   ON er.WORK_TYPE=d1.CATALOG_ID 
				LEFT JOIN  dict_catalog   AS d2   ON er.WORK_ACTIVITY=d2.CATALOG_ID 
				LEFT JOIN  dict_catalog   AS d3   ON er.WORK_STATS=d3.CATALOG_ID 	 
		WHERE ER.USER_ID = #userID# AND
			  er.REPORT_DATE BETWEEN #startDate# AND #endDate#
	   ORDER BY reportDate
	</select>
	
 <select id="createStaffMonth" parameterClass="map" resultClass="java.util.HashMap">
		SELECT
			din.dept_name as deptName,
			ub.USER_NAME as userName,
			ub.COMPANY_NAME as companyName,
			IF(ub.TEAM_STATS=1,'在场','离场') as teamStats,
			date_format(edr.REPORT_DATE,'%Y年%m月') as reportDate,
			sum(IF(work_type='0d0cc048adf440edb55d8e53d756439c',work_hours,0)) as jobHours,
			sum(IF(work_type='dba8abe0a65945a49ebfc587c947d920',work_hours,0)) as overTime
		FROM
			edaily_report as edr 
			LEFT JOIN department_info AS din ON edr.DEPT_ID=din.DEPT_ID
			LEFT JOIN  user_basic     AS ub  ON edr.USER_ID=ub.USER_ID 
		where edr.REPORT_DATE BETWEEN #startDate# and #endDate#			
			<dynamic prepend="and">
					<isNotEmpty property="deptId" prepend=" ">
						<iterate prepend=" " property="deptId" open="  edr.dept_id IN (" close=")" conjunction=",">
							#deptId[]#
						</iterate>
					</isNotEmpty>
				</dynamic>	
		GROUP BY deptName,userName, companyName,teamStats,REPORTDATE
		ORDER BY deptName,userName DESC		
</select>

<select id="createProjectStaff" parameterClass="map" resultClass="java.util.HashMap">
		SELECT
			pif.PROJECT_NO as projectID ,
			pif.PROJECT_NAME as projectName,
			IFNULL(dc.ENTRY_NAME,pif.PROJECT_STATS) as projectStats,				
			ub.USER_NAME  userName,
			SUM(er.WORK_HOURS) jobHours
		FROM  edaily_report as er 
			LEFT JOIN user_basic as ub on er.USER_ID=ub.USER_ID
			LEFT JOIN project_info as pif  on er.PROJECT_ID=pif.PROJECT_ID
			LEFT JOIN dict_catalog dc on pif.PROJECT_STATS=dc.CATALOG_ID and ENTRY_TYPE=1       			
		WHERE er.REPORT_DATE BETWEEN #startDate# and #endDate#
			<dynamic prepend="and">
					<isNotEmpty property="deptId" prepend=" ">
						<iterate prepend=" " property="deptId" open="  pif.dept_id IN (" close=")" conjunction=",">
							#deptId[]#
						</iterate>
					</isNotEmpty>
				</dynamic>	
		GROUP BY projectID,projectName,projectStats,userName
</select>	

<select id="createProjMonth" parameterClass="map" resultClass="java.util.HashMap">
		SELECT
				pif.PROJECT_no as projectID  ,
				pif.PROJECT_NAME as projectName,
				dc.ENTRY_NAME as entryName,
				date_format(er.REPORT_DATE,'%Y年%m月') as reportDate,
				GROUP_CONCAT(DISTINCT ub.USER_NAME) as userName,
				SUM(er.WORK_HOURS) as workHours
		FROM edaily_report as er
			LEFT JOIN user_basic as ub on er.USER_ID=ub.USER_ID
			LEFT JOIN project_info as pif on er.PROJECT_ID=pif.PROJECT_ID 
			LEFT JOIN dict_catalog dc on pif.PROJECT_STATS=dc.CATALOG_ID and ENTRY_TYPE=1 
		where er.REPORT_DATE BETWEEN #startDate# and #endDate#
		<dynamic prepend="and">
					<isNotEmpty property="deptId" prepend=" ">
						<iterate prepend=" " property="deptId" open="  pif.dept_id IN (" close=")" conjunction=",">
							#deptId[]#
						</iterate>
					</isNotEmpty>
				</dynamic>	
		GROUP BY projectID,projectName,entryName,reportDate	
		ORDER BY projectID		
</select>	
<select id="createStaffInfo" parameterClass="map" resultClass="java.util.HashMap">
		SELECT 
  				ub.USER_NAME AS userName,
  				IF(ub.TEAM_STATS=1,'在场','离场') as teamStats,
  				dif.DEPT_NAME AS deptName,
  				ub.EXTENSION_NO AS extensionNO,
				ub.USER_MOBILENO AS userMobileno,
				ub.GRADUATE_SCHOOL AS graduateSchool,
  				IFNULL(dc.ENTRY_NAME,ub.EDUCATION_BG) as educationBG,
				ub.SPECIALTY_KNOW AS specialtyKnow,
				DATE_FORMAT(ub.WORKDATE,'%Y-%m-%d') AS workDate,
  				DATE_FORMAT(JOIN_DATE,'%Y-%m-%d') as joinDate,
  				ua.JOIN_WORK AS joinWork,
				ua.JOIN_TRAIN AS joinTrain,
				ua.SPECIALITY AS spectiality,
				DATE_FORMAT(ub.BIRTHDAY,'%Y-%m-%d') AS birthday,	
				ub.USER_IDENTITY as userIdentity,
  				IF(ub.USER_SEXED=1,'男','女') AS userSexed,
				IF(ub.MARITAL_STATUS=1,'已婚','未婚') AS maritalStatus,
				IFNULL(dc1.ENTRY_NAME,ub.DEGREE) AS degree,
				IFNULL(dc2.ENTRY_NAME,ub.QUALIFICATIONS )AS qualifications,
  				ua.SKILL_SPECIALITY as skillSpeciality,
				ua.MANAGE_EMPIRICAL as manageEMP,
				ua.CERTIFICATE AS certificate,
				IFNULL(dc3.ENTRY_NAME,ub.POLITICS_STATUS) as politicsStatus
		FROM user_basic AS ub
 		LEFT JOIN department_info AS dif ON dif.DEPT_ID=ub.DEPT_ID
 		LEFT JOIN dict_catalog AS dc on dc.CATALOG_ID=ub.EDUCATION_BG and dc.ENTRY_TYPE=1
		LEFT JOIN USER_ADDITION AS ua on ua.USER_ID=ub.USER_ID
		LEFT JOIN TEAM_TRANSFER_LOGS AS tt on  tt.USER_ID=ub.USER_ID and tt.DEPT_ID=ub.DEPT_ID
 		LEFT JOIN dict_catalog AS dc1 on dc1.CATALOG_ID=ub.DEGREE
 		LEFT JOIN dict_catalog AS dc2 on dc2.CATALOG_ID=ub.QUALIFICATIONS
 		LEFT JOIN dict_catalog AS dc3 on dc3.CATALOG_ID=ub.POLITICS_STATUS	
 		<dynamic prepend="where">
					<isNotEmpty property="deptId" prepend=" ">
						<iterate prepend=" " property="deptId" open="  ub.dept_id IN (" close=")" conjunction=",">
							#deptId[]#
						</iterate>
					</isNotEmpty>
				</dynamic>		
</select>

<select id="createAddrBook" parameterClass="map" resultClass="java.util.HashMap">
		SELECT
		    di.DEPT_NAME as deptName, 
			ub.USER_NAME as userName,
			ub.EXTENSION_NO as extensionNo,
			ub.USER_MOBILENO as userMobileno,
			pi.PROJECT_NAME as projectName,
			ub.WORKING_PLACE as workingPlace,
			ub.IP_ADDRESS as IPAdderss
		FROM user_basic as ub
		LEFT JOIN  pro_transfer_logs AS  ptl on ub.USER_ID=ptl.USER_ID
		LEFT JOIN project_info      AS pi         on pi.PROJECT_ID=ptl.PROJECT_ID
		LEFT join department_info as di on di.DEPT_ID=ub.DEPT_ID
		WHERE  ub.TEAM_STATS=1
		<dynamic prepend="AND">
					<isNotEmpty property="deptId" prepend=" ">
						<iterate prepend=" " property="deptId" open="  ub.dept_id IN (" close=")" conjunction=",">
							#deptId[]#
						</iterate>
					</isNotEmpty>
				</dynamic>
		GROUP BY ub.USER_ID			
		ORDER BY ub.DEPT_ID
</select>	

<select id="projfromhead" parameterClass="map" resultClass="java.util.HashMap">
		SELECT  DATE_FORMAT(pr.START_DATE,'%Y-%m-%d') as startDate,
				pr.REPORT_NO  AS reportNO,
        		ub.USER_NAME  AS userName,
				pr.RECORD_DATE AS recordDate,
				pi.PROJECT_NO AS projectID,
				pi.PROJECT_NAME AS projectName,
				ub1.USER_NAME as psmName,
				pr.PROJECT_DESC AS projectDesc,
				pr.LEADER_APPRAISE AS leaderApp 
		FROM PWEEKLY_REPORT AS pr 
		LEFT JOIN user_basic AS ub ON ub.USER_ID=pr.USER_ID
		LEFT JOIN user_basic AS ub1 ON ub1.USER_ID=pr.PSMER_ID
		LEFT JOIN project_info AS pi ON pi.PROJECT_ID=pr.PROJECT_ID
		WHERE pr.REPORT_ID=#reportID#
</select>

<select id="projfromhour" parameterClass="map" resultClass="java.util.HashMap">
		SELECT 
			u.USER_NAME AS userName,
			dc.ENTRY_NAME AS branchName,
			pm.WEEKLY_SUMMARY AS weeklySummary,
			sum(IF(er.work_type='0d0cc048adf440edb55d8e53d756439c',er.work_hours,0)) AS normalTime,
			sum(IF(er.work_type='dba8abe0a65945a49ebfc587c947d920',er.work_hours,0)) AS overTime
		FROM EDAILY_REPORT AS er  
		   	LEFT JOIN PWEEKLY_REPORT AS pr ON er.PROJECT_ID = pr.PROJECT_ID
		   	LEFT JOIN user_basic u ON er.USER_ID = u.USER_ID
		  	LEFT JOIN DICT_CATALOG AS dc ON dc.CATALOG_ID=u.POST_TYPE
		  	LEFT JOIN PWEEKLY_MEMBERPLAN as pm ON (pm.USER_ID=er.USER_ID AND pm.REPORT_ID=#reportID#)
		WHERE  
			pr.REPORT_ID=#reportID#
	    	AND  er.REPORT_DATE BETWEEN PR.START_DATE AND PR.END_DATE
		GROUP BY 
			userName,branchName
</select>	

<select id="projfromcout" parameterClass="map" resultClass="java.util.HashMap">
		SELECT 			
			sum(IF(er.work_type='0d0cc048adf440edb55d8e53d756439c',er.work_hours,0)) as normalTime,
			sum(IF(er.work_type='dba8abe0a65945a49ebfc587c947d920',er.work_hours,0)) as overTime
		FROM  edaily_report AS er 
		WHERE er.PROJECT_ID =(SELECT pr.PROJECT_ID FROM pweekly_report AS pr WHERE pr.report_id=#reportID#)
</select>

<select id="projfromproblem" parameterClass="map" resultClass="java.util.HashMap">
		SELECT  
			pp.REPORT_ID,
			DATE_FORMAT(pp.DISCOVER_DATE,'%Y-%m-%d') AS discoverDate,
			pp.USER_NAME AS userName,
			pp.PROBLEM_DESC AS problemDesc,
			pp.RESOLVE_WAY AS resolveWay,
			dc.ENTRY_NAME AS problemStats
		FROM 
			pweekly_problems AS pp
			LEFT JOIN dict_catalog AS dc ON dc.CATALOG_ID=pp.PROBLEM_STATS
		WHERE   
			pp.REPORT_ID=#reportID#
</select>
<select id="dep_pwr_body" parameterClass="string" resultClass="PweeklyReport">
<![CDATA[
		SELECT
		  p.REPORT_ID as reportId,
		  p.REPORT_NO as reportNo,
		  r.PROJECT_NAME as projectName,
		  u.USER_NAME as psmName,
		  r.PROJECT_ID as projectId,
		  p.START_DATE as startDate,
		  p.END_DATE as endDate,
		  p.PROJECT_DESC as projectDesc,
		  p.RECORD_DATE as recordDate,
		  p.LEADER_APPRAISE as leaderAppraise,
		  (SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= p.EFFICIENCY_EXECUTE) as efficiencyExecute,
		  (SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= p.HUMAN_RESOURCE) as humanResource,
		  (SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= p.REQUIREMENT_ALTER) as requirementAlter,
		  (SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= p.CLIENT_RELATION) as clientRelation,
		  (
		  	SELECT 
		  		us.USER_NAME 
		  	FROM 
		  		USER_BASIC us 
		  	WHERE 
		  		us.USER_ID =
		  			(
		  				SELECT 
		  					pl.USER_ID FROM PRO_TRANSFER_LOGS pl 
		  				WHERE pl.PROJECT_ID = p.PROJECT_ID AND 
		  					pl.ROLE_TYPE ='9e635bb0864f4833aa06f0f1336cad34' AND 
		  					pl.CURRT_STATS =1
		  			)
		  ) AS psmerId,
		  (
				SELECT pp.NWEEK_PLAN FROM PWEEKLY_REPORT pp WHERE pp.PROJECT_ID = p.PROJECT_ID AND
				pp.END_DATE < p.END_DATE ORDER BY pp.END_DATE DESC LIMIT 1
		  ) AS cweekPlan,
		  p.NWEEK_PLAN as nweekPlan,
		  p.RESULTS_SHOW as resultsShow,
		  p.COMPLETE_PLAN as completePlan,
		  (SELECT uub.USER_NAME FROM user_basic uub WHERE uub.USER_ID = p.USER_ID) as userId
		FROM 
			PWEEKLY_REPORT p 
			LEFT JOIN USER_BASIC u ON p.PSMER_ID = u.USER_ID
			LEFT JOIN PROJECT_INFO r ON p.PROJECT_ID = r.PROJECT_ID
		WHERE 
			p.REPORT_ID =#value#
		]]>
</select>
<select id="dep_pro_stats" parameterClass="PweeklyReport" resultClass="ProjectStats">
		SELECT 
			p.STATS_ID AS statsId,p.PROJECT_ID AS projectId,
			p.MILESTONE_NAME AS milestoneName,p.PLAN_START AS planStart,
			p.PLAN_END AS planEnd,p.REALITY_START AS realityStart,
			p.REALITY_END AS realityEnd,dc.ENTRY_NAME as milestomeStats,
			p.PLAN_VERSION AS planVersion,d.ENTRY_NAME as  milestoneDes
		FROM
			PROJECT_STATS p
			LEFT JOIN DICT_CATALOG d ON d.CATALOG_ID = p.MILESTONE_NAME
			LEFT JOIN DICT_CATALOG dc ON dc.CATALOG_ID = p.MILESTONE_STATS
		WHERE
			p.PROJECT_ID = #projectId#
		ORDER BY d.ENTRY_ORDER
</select>
<select id="dep_pwr_problems" parameterClass="PweeklyReport" resultClass="PweeklyProblems">
		SELECT
			p.PROBLEM_ID as problemId,p.REPORT_ID as reportId,
			p.DISCOVER_DATE as discoverDate,p.USER_NAME as userName,
			p.PROBLEM_DESC as problemDesc,p.RESOLVE_WAY as resolveWay,
			p.PROBLEM_STATS as problemStats,p.RESPOSIBLER as resposibler,
			p.SOLVE_DATE as solveDate
		FROM
			PWEEKLY_PROBLEMS p
		WHERE
			p.REPORT_ID = #reportId#
</select>
<select id="dep_pwr_plans" parameterClass="PweeklyReport" resultClass="PweeklyMemberplan">
		SELECT
		  	u.USER_NAME as userName,
		  	(SELECT dc.ENTRY_NAME FROM DICT_CATALOG dc WHERE dc.CATALOG_ID = u.POST_TYPE) as branchName,
			pm.WEEKLY_SUMMARY as weeklySummary,
			pm.WEEKLY_PLAN as weeklyPlan
		FROM 
			PWEEKLY_MEMBERPLAN pm 
			LEFT JOIN USER_BASIC u ON u.USER_ID = pm.USER_ID
		WHERE 
			pm.REPORT_ID = #reportId#
</select>
<select id="dep_day_detals" parameterClass="PweeklyReport" resultClass="DailyReport">
	<![CDATA[
		SELECT 
			e.REPORT_DATE as reportDate,u.USER_NAME as userID,
			WEEKDAY(e.RECORD_DATE) as weekday,e.WORK_HOURS as workHours,
			(SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= e.WORK_TYPE) as workType,
			(SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= e.WORK_ACTIVITY) as workActivity,
			(SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= e.WORK_SUB_ACTIVITY) as workSubActivity,
 			e.WORK_CONTENT AS workContent,
			(SELECT  dc.ENTRY_NAME from dict_catalog dc where dc.CATALOG_ID= e.WORK_STATS) as workStats,
			e.RESULTS_SHOW as resultsShow,e.REP_COMMENT as repComment
		FROM EDAILY_REPORT e 
		LEFT JOIN USER_BASIC u ON u.USER_ID = e.USER_ID
		WHERE
			e.PROJECT_ID = #projectId# AND (e.REPORT_DATE <= #endDate#)
		ORDER BY 
			e.REPORT_DATE
	]]>
</select>
<!-- =========================split=========================== -->
<select id="query_pmm_for_export" parameterClass="map" resultClass="DailyReport">
		SELECT 
		 	CONCAT(t.USER_ID,'-',t.PROJECT_ID) AS repComment,
		 	u.USER_NAME AS userName,
		 	p.PROJECT_NAME AS projectName,
		 	0 AS workSchde,
		 	0 AS workHours
		FROM
			PRO_TRANSFER_LOGS t 
			LEFT JOIN user_basic u ON u.USER_ID = t.USER_ID
			LEFT JOIN project_info p ON p.PROJECT_ID = t.PROJECT_ID
		WHERE
			t.CURRT_STATS = 1 AND
			t.ROLE_TYPE IN ('517a4e05b5d44b5096e9b3bd04bec654','c401a1050fe64b29ba60997e2a576d52')
			<iterate property="projectIds" open=" AND  t.PROJECT_ID IN (" close=")" conjunction=",">
				#projectIds[]#
			</iterate>
		ORDER BY t.USER_ID,t.PROJECT_ID
</select>
<select id="query_daily_for_export" parameterClass="map" resultClass="DailyReport">
		SELECT
			u.USER_NAME AS userName,
			e.REPORT_DATE AS reportDate,
			p.PROJECT_NAME AS projectName,
			e.WORK_CONTENT AS workContent,
			e.RESULTS_SHOW AS resultsShow,
			e.WORK_SCHDE AS workSchde,
			e.DELAY_AFFECT AS delayAffect,
			e.DELAY_SOLVE AS delaySolve,
			e.WORK_HOURS AS workHours,
			e.WORK_TYPE AS workType,
			d.ENTRY_NAME AS workActivity,
			CONCAT(e.USER_ID,'-',e.PROJECT_ID) AS repComment,
			weekday(e.REPORT_DATE) AS dayOfWeek,
			c.RULE_ID AS ckRuleId
		FROM 
			EDAILY_REPORT e 
			LEFT JOIN USER_BASIC   u ON u.USER_ID    = e.USER_ID
			LEFT JOIN PROJECT_INFO p ON p.PROJECT_ID = e.PROJECT_ID
			LEFT JOIN DICT_CATALOG d ON d.CATALOG_ID = e.WORK_ACTIVITY
			LEFT JOIN CHECK_DETAIL c ON c.CHECK_DATE = e.REPORT_DATE  AND c.USER_ID =e.USER_ID
		WHERE
			e.REPORT_DATE BETWEEN #startDate# AND #endDate# 
			<iterate property="projectIds" open=" AND  e.PROJECT_ID IN (" close=")" conjunction=",">
				#projectIds[]#
			</iterate>
		ORDER BY e.REPORT_DATE,e.USER_ID,e.PROJECT_ID
</select>
<!-- =========================split=========================== -->
<select id="query_over_work_list" parameterClass="map" resultClass="DailyReport">
	SELECT
		p.PROJECT_NAME AS projectName,
		u.USER_NAME AS userName,
		u.USER_ID AS userID,
		sum(e.WORK_HOURS)/100 AS workHours,
	    e.REPORT_DATE AS reportDate,
		WEEKOFYEAR(e.REPORT_DATE) as wkOfYear,
  		date_add(e.REPORT_DATE, interval 0-weekday(e.REPORT_DATE) day) AS weekStart,
		date_add(e.REPORT_DATE, interval 6-weekday(e.REPORT_DATE) day) AS weekEnd
	FROM
		EDAILY_REPORT e
		LEFT JOIN USER_BASIC   u ON u.USER_ID    = e.USER_ID
		LEFT JOIN PROJECT_INFO p ON e.PROJECT_ID = p.PROJECT_ID
	WHERE
		e.WORK_TYPE = 'dba8abe0a65945a49ebfc587c947d920' 
		AND e.REPORT_DATE between #startDate# and #endDate#
		<iterate property="projectIds" open=" AND  e.PROJECT_ID IN (" close=")" conjunction=",">
			#projectIds[]#
		</iterate>
	GROUP BY P.PROJECT_ID,U.USER_ID,E.REPORT_DATE	
	ORDER BY e.REPORT_DATE,e.REPORT_DATE
</select>
<!-- =========================split=========================== -->
<select id="query_members_by_projectId" parameterClass="map" resultClass="java.util.HashMap">
	SELECT
		t.USER_ID,u.USER_NAME
	FROM
		PRO_TRANSFER_LOGS t
		LEFT JOIN USER_BASIC u ON u.USER_ID = t.USER_ID
	WHERE
		t.CURRT_STATS = 1 AND
		t.PROJECT_ID = #projectId# AND
		t.ROLE_TYPE IN ('9e635bb0864f4833aa06f0f1336cad34','c401a1050fe64b29ba60997e2a576d52','517a4e05b5d44b5096e9b3bd04bec654','70eed5ac1d7048d68f3648df7640b6a1')
</select>
<select id="query_workhours_detail" parameterClass="map" resultClass="WorkDetail">
	SELECT 
		t.USER_ID AS userId,p.HOURS_RULE AS hoursRule,dayofmonth(t.REPORT_DATE) AS dayNum,
		SUM(IF(work_type='0d0cc048adf440edb55d8e53d756439c',t.WORK_HOURS,0)) AS jobHours,
		SUM(IF(work_type='dba8abe0a65945a49ebfc587c947d920',t.WORK_HOURS,0)) AS overHours,
		SUM(IF(work_type='3692b9cd731a452ea9e9c55efa5c9618',t.WORK_HOURS,0)) AS levHours,
		(SELECT d.ENTRY_NAME FROM DICT_CATALOG d WHERE d.CATALOG_ID = t.BEG_TYPE AND t.WORK_TYPE = '3692b9cd731a452ea9e9c55efa5c9618') AS begType
	FROM 
		EDAILY_REPORT t
		LEFT JOIN PROJECT_INFO p ON p.PROJECT_ID = t.PROJECT_ID
	WHERE 
		t.PROJECT_ID = #projectId# AND
		year(t.REPORT_DATE) = #year# AND 
		month(t.REPORT_DATE) = #month#
	GROUP BY t.REPORT_DATE,t.USER_ID
	ORDER BY t.REPORT_DATE
</select>
<select id="query_workhours_total" parameterClass="map" resultClass="WorkDetail">
	SELECT 
		'total' AS userId,dayofmonth(t.REPORT_DATE) AS dayNum,
		SUM(IF(work_type='0d0cc048adf440edb55d8e53d756439c',t.WORK_HOURS,0)) AS jobHours,
		SUM(IF(work_type='dba8abe0a65945a49ebfc587c947d920',t.WORK_HOURS,0)) AS overHours
	FROM 
		EDAILY_REPORT t
	WHERE 
		t.WORK_TYPE IN ('0d0cc048adf440edb55d8e53d756439c','dba8abe0a65945a49ebfc587c947d920') AND
		t.PROJECT_ID = #projectId# AND
		YEAR(t.REPORT_DATE) = #year# AND 
		MONTH(t.REPORT_DATE) = #month#
	GROUP BY t.REPORT_DATE
	ORDER BY t.REPORT_DATE
</select>
<select id="query_proMember_by_deptIds" parameterClass="map" resultClass="ProjectMember">
	SELECT 
		p.PROJECT_NAME AS projectName,u.USER_NAME AS userName,
		t.USER_ID AS userId,t.PROJECT_ID AS projectId,
		t.ROLE_TYPE AS roleType
	FROM 
		PRO_TRANSFER_LOGS t 
		LEFT JOIN USER_BASIC u ON u.USER_ID      = t.USER_ID
		LEFT JOIN PROJECT_INFO p ON p.PROJECT_ID = t.PROJECT_ID
	WHERE 
		t.CURRT_STATS = 1 AND t.ROLE_TYPE != '9e635bb0864f4833aa06f0f1336cad34'
		<iterate property="deptIds" open=" AND  p.DEPT_ID IN (" close=")" conjunction=",">
			#deptIds[]#
		</iterate>
	ORDER BY t.PROJECT_ID ASC,t.ROLE_TYPE DESC
</select>
<select id="query_wcassit_by_deptIds" parameterClass="map" resultClass="DailyReport">
	SELECT 
		u.USER_NAME AS userName,SUM(t.WORK_HOURS) AS workHours,
		u.WORKING_PLACE AS workActivity,
		(SELECT d.ENTRY_NAME FROM DICT_CATALOG d WHERE d.CATALOG_ID = u.POST_TYPE) AS workSubActivity
	FROM 
		EDAILY_REPORT t 
		LEFT JOIN USER_BASIC u ON u.USER_ID = t.USER_ID
	WHERE 
		YEAR(t.RECORD_DATE) = #year# AND 
		MONTH(t.RECORD_DATE) = #month# AND
		t.WORK_TYPE IN('0d0cc048adf440edb55d8e53d756439c','dba8abe0a65945a49ebfc587c947d920')
		<iterate property="deptIds" open=" AND t.DEPT_ID IN (" close=")" conjunction=",">
			#deptIds[]#
		</iterate>
	GROUP BY t.USER_ID
	ORDER BY t.USER_ID
</select>
</sqlMap>
