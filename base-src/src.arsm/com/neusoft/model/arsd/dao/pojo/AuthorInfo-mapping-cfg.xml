<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="AuthorityInfo">
	<typeAlias alias="AuthorityInfo" type="com.neusoft.model.arsd.dao.pojo.AuthorityInfo"/>
	<!-- Only For Save Action -->
	<insert id="insert" parameterClass="AuthorityInfo">
		INSERT INTO AUTHORITY_INFO
			(AUTHOR_ID,AUTHOR_SIGN,AUTHOR_DESC,AUTHOR_NAME,ENABLED)
		VALUES
			(#authorId#,#authorSign#,#authorDesc:VARCHAR#,#authorName#,#enabled#)
	</insert>
	<update id="updateById" parameterClass="AuthorityInfo">
		UPDATE
			AUTHORITY_INFO
		SET
			AUTHOR_SIGN = #authorSign#,
			AUTHOR_DESC = #authorDesc:VARCHAR#,
			AUTHOR_NAME = #authorName#,
			ENABLED = #enabled#
		WHERE
			AUTHOR_ID = #authorId#
	</update>
	<select id="query_all_authors_count" parameterClass="map" resultClass="int">
		SELECT
			COUNT(AUTHOR_ID)
		FROM
			AUTHORITY_INFO
	</select>
	<select id="query_all_authors" parameterClass="map" resultClass="AuthorityInfo">
		SELECT
			AUTHOR_ID as authorId,
			AUTHOR_SIGN as authorSign,
			AUTHOR_DESC as authorDesc,
			AUTHOR_NAME as authorName,
			ENABLED as enabled
		FROM
			AUTHORITY_INFO
		LIMIT
			#start#,#limit#
	</select>
	<select id="query_role_map_author" resultClass="AuthorityInfo">
		SELECT
			m.ROLE_ID as roleId,
			a.AUTHOR_ID as authorId,
			a.AUTHOR_SIGN as authorSign,
			a.AUTHOR_NAME as authorName
		FROM
			ROLE_MAP_AUTHOR m
			LEFT JOIN AUTHORITY_INFO a ON a.AUTHOR_ID = m.AUTHOR_ID
		WHERE 
			a.ENABLED = 1
		ORDER BY 
			m.ROLE_ID
	</select>
	<select id="query_enabled_authors" resultClass="AuthorityInfo">
		SELECT
			AUTHOR_ID as authorId,
			AUTHOR_SIGN as authorSign,
			AUTHOR_DESC as authorDesc,
			AUTHOR_NAME as authorName
		FROM
			AUTHORITY_INFO
		WHERE
			ENABLED =1
	</select>
	<select id="check_is_exist" parameterClass="AuthorityInfo" resultClass="string">
		SELECT
			AUTHOR_ID
		FROM
			AUTHORITY_INFO
		WHERE
			AUTHOR_SIGN = #authorSign# OR
			AUTHOR_NAME = #authorName#
	</select>
	<select id="query_author_for_opts" resultClass="ComboxModel">
		SELECT
			t.AUTHOR_ID as regValue,
			t.AUTHOR_NAME as displayValue,
			'authors' AS storName
		FROM
			AUTHORITY_INFO t
		WHERE
			t.ENABLED = 1
	</select>
	<select id="query_by_roleId" parameterClass="string" resultClass="string">
		SELECT
			t.AUTHOR_ID
		FROM
			AUTHORITY_INFO t LEFT JOIN ROLE_MAP_AUTHOR m ON t.AUTHOR_ID = m.AUTHOR_ID
		WHERE
			t.ENABLED = 1 AND
			m.ROLE_ID = #value#
	</select>
	<select id="query_for_authorities" parameterClass="string" resultClass="string">
		SELECT 
			DISTINCT(au.AUTHOR_SIGN) 
		FROM 
			role_map_author as rma 
		LEFT JOIN 
			authority_info au ON  rma.AUTHOR_ID = au.AUTHOR_ID
		WHERE 
			au.ENABLED =1 AND rma.ROLE_ID IN
			(
				SELECT 
					ri.ROLE_ID FROM user_map_role ump LEFT JOIN role_info ri ON ump.ROLE_ID = ri.ROLE_ID 
				WHERE 
					ri.ENABLED =1 AND ump.USER_ID = #value# 
			)
	</select>
	<!-- delete author sql set  start -->
	<delete id="remove_author_from_source" parameterClass="AuthorityInfo">
		UPDATE
			SCOURCE_INFO
		SET
			AUTHOR_ID = null
		WHERE
			AUTHOR_ID = #authorId#
	</delete>
	<delete id="remove_author_from_amr" parameterClass="AuthorityInfo">
		DELETE FROM 
			ROLE_MAP_AUTHOR
		WHERE 
			AUTHOR_ID = #authorId#
	</delete>
	<delete id="remove_author_from_self" parameterClass="AuthorityInfo">
		DELETE FROM
			AUTHORITY_INFO
		WHERE
			AUTHOR_ID = #authorId#
	</delete>
	<!-- delete author sql set  end   -->
</sqlMap>
