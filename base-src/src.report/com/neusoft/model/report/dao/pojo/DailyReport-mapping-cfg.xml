<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="DailyReport">
	<typeAlias alias="DailyReport" type="com.neusoft.model.report.dao.pojo.DailyReport" />
	<!-- 新增记录 -->
	<insert id="insert" parameterClass="DailyReport">
		INSERT INTO 
			EDAILY_REPORT (DREPORT_ID,PROJECT_ID,USER_ID,DEPT_ID,REPORT_DATE,
			 WORK_HOURS,WORK_TYPE,WORK_ACTIVITY,WORK_SUB_ACTIVITY,WORK_STATS,
			 RECORDOR_ID,RECORD_DATE,WORK_CONTENT,RESULTS_SHOW,REP_COMMENT,
			 BEG_TYPE,DELAY_AFFECT,DELAY_SOLVE,REPORT_TYPE,WORK_SCHDE)
		VALUES
			(#dreportID#,#projectID#,#userID#,#deptID#,DATE(#reportDate#),
			 #workHours#,#workType#,#workActivity:VARCHAR#,#workSubActivity:CHAR#,
			 #workStats#,#recordorID#,CURRENT_DATE(),#workContent:VARCHAR#,
			 #resultsShow:VARCHAR#,#repComment:VARCHAR#,#begType:VARCHAR#,
			 #delayAffect:VARCHAR#,#delaySolve:VARCHAR#,#reportType#,#workSchde#)
	</insert>
	<delete id="deleteById" parameterClass="DailyReport">
		DELETE FROM 
			EDAILY_REPORT
		WHERE
			DREPORT_ID = #dreportID#
	</delete>
	<delete id="batch_delete" parameterClass="map">
		DELETE FROM 
			EDAILY_REPORT
		WHERE
			USER_ID = #KEY_USERID# AND
			REPORT_DATE BETWEEN #startDate# and #endDate#
	</delete>
	<update id="updateById" parameterClass="DailyReport">
		UPDATE 
			EDAILY_REPORT 
		SET
			WORK_HOURS = #workHours#,
			WORK_TYPE = #workType:VARCHAR#,
			WORK_ACTIVITY = #workActivity:VARCHAR#,
			WORK_SUB_ACTIVITY = #workSubActivity:VARCHAR#,
			WORK_STATS = #workStats:VARCHAR#,
			RECORD_DATE = CURRENT_DATE(),
			WORK_CONTENT = #workContent:VARCHAR#,
			RESULTS_SHOW = #resultsShow:VARCHAR#,
			REP_COMMENT = #repComment:VARCHAR#,
			BEG_TYPE = #begType:VARCHAR#,
			DELAY_AFFECT = #delayAffect:VARCHAR#,
			DELAY_SOLVE =  #delaySolve:VARCHAR#,
			REPORT_TYPE = #reportType#,
			WORK_SCHDE = #workSchde#
		WHERE 
			DREPORT_ID = #dreportID#
	</update>
	<select id="selectAll_count" parameterClass="map" resultClass="int">
		SELECT
			COUNT(DREPORT_ID)
		FROM
			EDAILY_REPORT 
		WHERE 
			USER_ID=#KEY_USERID#
		<dynamic>
				<isNotEmpty prepend=" AND " property="projectId">
					PROJECT_ID = #projectId#
				</isNotEmpty>
				<isNotEmpty prepend=" AND " property="startDate">
					(REPORT_DATE BETWEEN #startDate# AND #endDate#)
				</isNotEmpty>
		</dynamic>
	</select>
	<select id="selectAll" parameterClass="map" resultClass="DailyReport">
		SELECT
			 er.DREPORT_ID AS dreportID,
			 er.PROJECT_ID AS projectID,
			 pif.PROJECT_NAME AS projectName,
			 er.USER_ID AS userID,
			 ub.USER_NAME AS userName,
			 er.DEPT_ID AS deptID,
			 dept.DEPT_NAME AS deptName,
			 er.REPORT_DATE AS reportDate,
			 er.WORK_HOURS AS workHours,
			 er.WORK_TYPE AS workType,
			 er.WORK_ACTIVITY AS workActivity, 
			 er.WORK_SUB_ACTIVITY AS workSubActivity, 
			 er.WORK_STATS AS workStats, 
			 er.RECORD_DATE AS recordDate,
			 er.WORK_CONTENT AS workContent,
			 er.RESULTS_SHOW AS resultsShow,
			 er.REP_COMMENT AS repComment,
			 er.BEG_TYPE AS begType,
			 er.DELAY_AFFECT AS delayAffect,
			 er.DELAY_SOLVE AS delaySolve,
			 er.REPORT_TYPE AS reportType,
			 er.WORK_SCHDE AS workSchde
		FROM
			EDAILY_REPORT AS er
			 	LEFT JOIN  project_info AS pif  ON er.PROJECT_ID=pif.PROJECT_ID
				LEFT JOIN  user_basic AS ub  ON er.USER_ID=ub.USER_ID
				LEFT JOIN  department_info AS dept on er.DEPT_ID=dept.DEPT_ID
		WHERE 
			 er.USER_ID=#KEY_USERID#
		<dynamic>
				<isNotEmpty prepend=" AND " property="projectId">
					er.PROJECT_ID = #projectId#
				</isNotEmpty>
				<isNotEmpty prepend=" AND " property="startDate">
					(er.REPORT_DATE BETWEEN #startDate# AND #endDate#)
				</isNotEmpty>
		</dynamic>
		ORDER by 
			REPORT_DATE desc,WORK_TYPE
		LIMIT 
			#start#,#limit#
	</select>
	<!-- check edayReport hours is ok -->
	<select id="sum_workhours_by_day" parameterClass="DailyReport" resultClass="java.util.HashMap">
		SELECT
			SUM(e.WORK_HOURS) AS allHour, 
			SUM(IF(e.WORK_TYPE IN('0d0cc048adf440edb55d8e53d756439c'),e.WORK_HOURS,0)) AS  norHour,
			SUM(IF(e.WORK_TYPE IN('dba8abe0a65945a49ebfc587c947d920'),e.WORK_HOURS,0)) AS  addHour,
			SUM(IF(e.WORK_TYPE IN('3692b9cd731a452ea9e9c55efa5c9618'),e.WORK_HOURS,0)) AS  evlHour
		FROM
			EDAILY_REPORT AS e
		WHERE
			e.USER_ID = #userID# AND
			e.REPORT_DATE = #reportDate#
			<dynamic>
				<isNotEmpty prepend=" AND " property="dreportID">
					e.DREPORT_ID NOT IN (#dreportID#)
				</isNotEmpty>
			</dynamic>
	</select>
	<!-- 根据ID加载一条记录进行修改 -->
	<select id="queryById" parameterClass="string" resultClass="DailyReport">
		SELECT
			 er.DREPORT_ID as dreportID,
			 er.PROJECT_ID as projectID, 
			 ub.USER_NAME as userID, 
			 er.DEPT_ID as deptID, 
			 er.REPORT_DATE as reportDate,
			 er.WORK_HOURS as workHours,
			 er.WORK_TYPE as workType,
			 er.WORK_ACTIVITY as workActivity, 
			 er.WORK_SUB_ACTIVITY as workSubActivity, 
			 er.WORK_STATS as workStats, 
			 er.RECORDOR_ID as recordorID,
			 er.RECORD_DATE as recordDate,
			 er.WORK_CONTENT as workContent,
			 er.RESULTS_SHOW as resultsShow,
			 er.REP_COMMENT as repComment,
			 er.BEG_TYPE as begType,
			 er.DELAY_AFFECT as delayAffect,
			 er.DELAY_SOLVE as delaySolve,
			 er.REPORT_TYPE as reportType,
			 er.WORK_SCHDE AS workSchde
		FROM
			EDAILY_REPORT AS er
		LEFT JOIN user_basic AS ub ON ub.USER_ID = er.USER_ID
		where 
			er.DREPORT_ID = #value#
	</select>
	<select id="queryDetailById" parameterClass="string" resultClass="DailyReport">
		SELECT
			  er.DREPORT_ID as dreportID,
			 <!-- PROJECT_ID as projectID, -->
			 pif.PROJECT_NAME as projectID,
			 <!-- USER_ID as userID, -->
			 ub.USER_NAME as userID,
			 <!-- DEPT_ID as deptID, -->
			 dept.DEPT_NAME as deptID,
			 er.REPORT_DATE as reportDate,
			 er.WORK_HOURS as workHours,
			 <!-- WORK_TYPE as workType, -->
			 d1.ENTRY_NAME as workType,
			 <!-- WORK_ACTIVITY as workActivity, -->
			 d2.ENTRY_NAME as workActivity,
			 <!-- WORK_SUB_ACTIVITY as workSubActivity, -->
			 d3.ENTRY_NAME as workSubActivity,
			 <!-- WORK_STATS as workStats, -->
			 d4.ENTRY_NAME as workStats,
			 er.RECORDOR_ID as recordorID,
			 er.RECORD_DATE as recordDate,
			 er.WORK_CONTENT as workContent,
			 er.RESULTS_SHOW as resultsShow,
			 er.REP_COMMENT as repComment,
			 er.REPORT_TYPE as reportType,
			 er.WORK_SCHDE AS workSchde
		FROM
			EDAILY_REPORT AS er
			 	LEFT JOIN  project_info   AS pif  ON er.PROJECT_ID=pif.PROJECT_ID
				LEFT JOIN  user_basic     AS ub   ON er.USER_ID=ub.USER_ID 
				LEFT JOIN  dict_catalog AS d1 on  er.WORK_TYPE=d1.CATALOG_ID 
				LEFT JOIN  dict_catalog AS d2 on  er.WORK_ACTIVITY=d2.CATALOG_ID 
				LEFT JOIN  dict_catalog AS d3 on  er.WORK_SUB_ACTIVITY=d3.CATALOG_ID 
				LEFT JOIN  dict_catalog AS d4 on  er.WORK_STATS=d4.CATALOG_ID 
				LEFT JOIN  department_info AS dept on er.DEPT_ID=dept.DEPT_ID
		WHERE 
			DREPORT_ID = #value#
	</select>
	<select id="view_empleey_day_note" parameterClass="map" resultClass="DailyReport">
		SELECT
			 er.DREPORT_ID as dreportID,
			 pif.PROJECT_NAME as projectName,
			 ub.USER_NAME as userName,
			 dept.DEPT_NAME as deptName,
			 er.REPORT_DATE as reportDate,
			 er.WORK_HOURS as workHours,
			 er.WORK_TYPE as workType,
			 er.WORK_ACTIVITY as workActivity, 
			 er.WORK_SUB_ACTIVITY as workSubActivity, 
			 er.WORK_STATS as workStats, 
			 er.RECORD_DATE as recordDate,
			 er.WORK_CONTENT as workContent,
			 er.RESULTS_SHOW as resultsShow,
			 er.REP_COMMENT as repComment,
			 er.REPORT_TYPE as reportType,
			 er.WORK_SCHDE AS workSchde
		FROM
			EDAILY_REPORT AS er
			 	LEFT JOIN  PROJECT_INFO   AS pif  ON pif.PROJECT_ID = er.PROJECT_ID
				LEFT JOIN  USER_BASIC     AS ub   ON ub.USER_ID = er.USER_ID
				LEFT JOIN  DEPARTMENT_INFO AS dept on er.DEPT_ID= dept.DEPT_ID
		WHERE 
		<dynamic>
			<isEmpty property="projectId">
				<iterate open=" pif.DEPT_ID IN (" close=")" conjunction="," property="access_data_set">
					#access_data_set[]#
				</iterate>
			</isEmpty>
			<isNotEmpty property="projectId">
				er.PROJECT_ID = #projectId#
			</isNotEmpty>
			<isNotEmpty property="userName" prepend=" AND ">
				ub.USER_NAME LIKE #userName#
			</isNotEmpty>
			<isNotEmpty property="reportDate" prepend=" AND ">
				er.REPORT_DATE = #reportDate#
			</isNotEmpty>
		</dynamic>
		ORDER BY REPORT_DATE DESC
		LIMIT 
			#start#,#limit#
	</select>
	<select id="view_empleey_day_note_count" parameterClass="map" resultClass="int">
		SELECT
			count(er.DREPORT_ID)
		FROM
			EDAILY_REPORT as er
			LEFT JOIN  PROJECT_INFO   AS pif  ON pif.PROJECT_ID = er.PROJECT_ID
			LEFT JOIN  USER_BASIC AS ub ON ub.USER_ID = er.USER_ID
		WHERE 
		<dynamic>
			<isEmpty property="projectId">
				<iterate open=" pif.DEPT_ID IN (" close=")" conjunction="," property="access_data_set">
					#access_data_set[]#
				</iterate>
			</isEmpty>
			<isNotEmpty property="projectId">
				er.PROJECT_ID = #projectId#
			</isNotEmpty>
			<isNotEmpty property="userName" prepend=" AND ">
				ub.USER_NAME LIKE #userName#
			</isNotEmpty>
			<isNotEmpty property="reportDate" prepend=" AND ">
				er.REPORT_DATE = #reportDate#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- 返回个人参加所有项目的名称 -->
	<select id="selectAllProject_of_self" parameterClass="map" resultClass="ComboxModel">
		SELECT
				pi.PROJECT_ID as regValue,
				pi.PROJECT_NAME as displayValue,
				'project_info_data' as storName
		FROM
			  pro_transfer_logs as ptl
			  left join project_info as pi ON pi.project_id=ptl.project_id
		WHERE 
			  ptl.currt_stats = 1 AND
			  pi.PROJECT_STATS = 'b9cca6cb3163425987529be72b7a1dca' AND
			  ptl.user_id =#KEY_USERID#
		GROUP BY pi.PROJECT_ID
	</select>
	<!-- 根据项目ID查用户列表 -->
	<select id="query_userlist_by_projectId" parameterClass="string" resultClass="ComboxModel">
		SELECT
			p.USER_ID as regValue,
			u.USER_NAME as displayValue
		FROM
			PRO_TRANSFER_LOGS p
			LEFT JOIN USER_BASIC u ON p.USER_ID = u.USER_ID
		WHERE
			p.PROJECT_ID = #value#
	</select>
</sqlMap>
