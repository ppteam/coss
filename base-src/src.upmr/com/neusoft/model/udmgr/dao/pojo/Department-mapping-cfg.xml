<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Department">
	<typeAlias alias="Department" type="com.neusoft.model.udmgr.dao.pojo.Department"/>
	<!-- Only For Save Action -->
	<insert id="insert" parameterClass="Department">
		INSERT INTO DEPARTMENT_INFO
			(DEPT_ID,NODE_DEEP,FATHER_ID,DEPT_NAME,DEPT_ORDER,ENABLED,NODE_XPATH,LEAFNODE)
		VALUES
			(#deptId#,#nodeDeep#,#fatherId#,#deptName#,#deptOrder#,1,#nodeXpath#,0)
	</insert>
	<update id="updateById" parameterClass="Department">
		UPDATE
			DEPARTMENT_INFO
		SET
			NODE_DEEP = #nodeDeep#,
			FATHER_ID = #fatherId#,
			DEPT_NAME = #deptName#,
			DEPT_ORDER = #deptOrder#,
			ENABLED=#enabled#,
			NODE_XPATH=#nodeXpath#,
			LEAFNODE=#leafNode#
		WHERE
			DEPT_ID = #deptId#
	</update>
	<update id="disabled_nodes_Bypath" parameterClass="string">
		UPDATE
			DEPARTMENT_INFO
		SET
			ENABLED = 0
		WHERE
			NODE_XPATH LIKE #value#
	</update>
	<update id="updateByWeb" parameterClass="Department">
		UPDATE
			DEPARTMENT_INFO
		SET
			DEPT_NAME = #deptName#,
			DEPT_ORDER = #deptOrder#
		WHERE
			DEPT_ID = #deptId#
	</update>
	<select id="check_has_child" resultClass="int" parameterClass="string">
		SELECT
			COUNT(DEPT_ID)
		FROM
			DEPARTMENT_INFO
		WHERE
			ENABLED = 1 AND
			FATHER_ID = #value#
	</select>
	<select id="findById" parameterClass="string" resultClass="Department">
		SELECT
			DEPT_ID as deptId,
			NODE_DEEP as nodeDeep,
			FATHER_ID as fatherId,
			DEPT_NAME as deptName,
			DEPT_ORDER as deptOrder,
			ENABLED as enabled,
			NODE_XPATH as nodeXpath,
			LEAFNODE as leafNode
		FROM
			DEPARTMENT_INFO
		WHERE
			DEPT_ID = #value#
	</select>
	<select id="queryForTree" resultClass="XmlBeanModel">
		SELECT
			DEPT_ID as id,
			NODE_DEEP as deep,
			FATHER_ID as fatherId,
			DEPT_NAME as value,
			LEAFNODE as leaf,
			DEPT_ORDER as seq
		FROM
			DEPARTMENT_INFO
		WHERE
			ENABLED = 1 
		ORDER BY 
			NODE_DEEP,DEPT_ORDER
	</select>
	<select id="query_all_for_options" parameterClass="map" resultClass="ComboxModel">
		SELECT
				t.DEPT_ID as regValue,
				t.DEPT_NAME as displayValue,
				t.LEAFNODE as leafNode,
				'dept_data' as storName
		FROM
			DEPARTMENT_INFO t
		WHERE
			t.ENABLED = 1
		ORDER BY
			t.NODE_DEEP,t.DEPT_ORDER
	</select>
	<select id="selectAll_for_options" parameterClass="map" resultClass="ComboxModel">
		SELECT
				t.DEPT_ID as regValue,
				t.DEPT_NAME as displayValue,
				t.LEAFNODE as leafNode,
				'dept_data' as storName
		FROM
			DEPARTMENT_INFO t
		WHERE
			t.ENABLED = 1
		<dynamic>
			<iterate open=" AND t.DEPT_ID IN (" close=")" conjunction="," property="access_data_set">
				#access_data_set[]#
			</iterate>
		</dynamic>
	</select>
	<select id="load_access_by_userId" parameterClass="string" resultClass="Department">
		SELECT
			t.DEPT_ID as deptId,d.DEPT_NAME as deptName,d.LEAFNODE as leafNode
		FROM
			ACCESS_DATA_POWER t
		LEFT JOIN  DEPARTMENT_INFO d ON d.DEPT_ID = t.DEPT_ID
		WHERE
			d.ENABLED = 1 AND
			t.USER_ID = #value#
	</select>
	<select id="query_depts_by_userId" parameterClass="string" resultClass="string">
		SELECT 
			t.DEPT_ID as deptId
		FROM
			DEPARTMENT_INFO t
		WHERE
			t.ENABLED = 1 AND
			t.LEAFNODE = 1 AND
			t.DEPT_ID IN (
				SELECT m.DEPT_ID FROM ACCESS_DATA_POWER m WHERE m.USER_ID = #value#
			)
	</select>
	<select id="query_leaf_dept_byid" parameterClass="string" resultClass="Department">
		SELECT 
			t.DEPT_ID as deptId,t.DEPT_NAME as deptName,t.LEAFNODE as leafNode
		FROM
			DEPARTMENT_INFO t
		WHERE
			t.ENABLED = 1 AND
			t.NODE_XPATH like #value#
	</select>
</sqlMap>
